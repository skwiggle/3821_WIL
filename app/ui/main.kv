#: import Window kivy.core.window.Window
#: import MDApp kivymd.app.MDApp
#: import ListProperty kivy.properties.ListProperty
#: import MDLabel kivymd.uix.label.MDLabel
#: import MDRaisedButton kivymd.uix.button.MDRaisedButton
#: import MDFlatButton kivymd.uix.button.MDFlatButton
#: import MDIconButton kivymd.uix.button.MDIconButton
#: import MDTextField kivymd.uix.textfield.MDTextField
#: import MDSpinner kivymd.uix.spinner.MDSpinner
#: import Svg kivy.graphics.svg.Svg
#: import hex kivy.utils.get_color_from_hex
#: import CoreImage kivy.uix.image.Image


<ReconnectBtn>:
    source: './icon/reconnect/reconnect_btn_256x256.png'
    on_press: app.reconnect()

<DebugPanelFocused@RecycleView>:
    viewclass: 'DataCell'
    canvas.before:
        Color:
            rgba: (0, 0, 0, 1)  # log screen background color
        RoundedRectangle:
            radius: [60, 60, 60, 60]
            size: root.size
            pos: root.pos
    RecycleGridLayout:
        orientation: 'vertical'
        cols: 1
        padding: 25
        default_size: None, dp(50)
        default_size_hint: 1, None
        size_hint_y: None
        height: self.minimum_height

<DebugPanel@RecycleView>:
    viewclass: 'DataCell'
    canvas.before:
        Color:
            rgba: (0, 0, 0, 1)  # log screen background color
        RoundedRectangle:
            radius: [60, 60, 60, 60]
            size: root.size
            pos: root.pos
    RecycleGridLayout:
        orientation: 'vertical'
        cols: 1
        padding: 25
        default_size: None, dp(50)
        default_size_hint: 1, None
        size_hint_y: None
        height: self.minimum_height

<DataCell@MDLabel>:
    size_hint_y: None
    text_size: self.width, None
    height: self.texture_size[1]
    theme_text_color: 'Custom'
    text_color: [0, 0.68, 0, 1]

<ClearBtn>:
    text: "[color=#FFFFFF][size=20sp]Clear[/size][/color]"
    markup: True
    background_color: 0, 0, 0, 0
    size_hint_x: .7
    height: Window.height*0.089
    on_press: app.clear_content()
    canvas.before:
        Color:
            rgba: .91, 0, .46, 1
        RoundedRectangle:
            radius: [self.size[1]/2, self.size[1]/2, self.size[1]/2, self.size[1]/2]
            size: self.size
            pos: self.pos

<SendBtn>:
    text: "[color=#FFFFFF][size=20sp]Send[/size][/color]"
    markup: True
    background_color: 0, 0, 0, 0
    size_hint_x: .7
    height: Window.height*0.089
    on_press: app.send_command()
    canvas.before:
        Color:
            rgba: .26, .73, .81, 1
        RoundedRectangle:
            radius: [self.size[1]/2, self.size[1]/2, self.size[1]/2, self.size[1]/2]
            size: self.size
            pos: self.pos

<Input>:
    canvas.before:
        Color:
            rgba: .17, .59, .8, 1
        RoundedRectangle:
            radius: [self.height/2, self.height/2, self.height/2, self.height/2]
            size: root.size
            pos: root.pos

<Content@TextInput>:
    font_size: sp(20)
    foreground_color: 1, 1, 1, 1
    background_color: 0, 0, 0, 0
    multiline: False
    on_focus: app.on_input_focus()

<MainScreen@Screen>:
    name: 'main'
    on_enter: self.ids['cmd_input'].text = app.cmd_text
    Widget:
        id: main_widget
        size: Window.size
        Image:
            id: background
            allow_stretch: True
            keep_ratio: False
            source: './icon/background/background_full.png'
            size: root.width, root.height
            pos: root.pos
        BoxLayout:
            id: body
            orientation: 'vertical'
            size: root.size
            padding: [20, 0, 20, 0]
            Widget:
                id: spacer
                size_hint_y: .14
            DebugPanel:
                id: debug_panel
                size_hint_y: .445
            BoxLayout:
                id: reconnect_layout
                cols: 2
                size_hint_x: None
                size_hint_y: .082
                ReconnectBtn:
                    id: reconnect_btn
                    size_hint_y: .6
                    pos_hint: {'center_y': .5, 'x': 0}
            BoxLayout:
                id: input_layout
                orientation: 'vertical'
                size_hint_y: .333
                Input:
                    id: input_box
                    size_hint_y: .31
                    Content:
                        id: cmd_input
                        size: (input_box.width-40, input_box.height)
                        pos_hint: {'center_x': .5}
                        pos: (input_box.pos[0]+20, input_box.pos[1]-(input_box.height/2)+20)
                Widget:
                    size_hint_y: .16
                GridLayout:
                    id: button_layout
                    cols: 2
                    size_hint_y: .26
                    AnchorLayout:
                        anchor_x: 'left'
                        anchor_y: 'top'
                        ClearBtn:
                            id: clear_btn
                            pos_hint: {'center_y': .5}
                    AnchorLayout:
                        anchor_x: 'right'
                        anchor_y: 'top'
                        SendBtn:
                            id: send_btn
                            pos_hint: {'center_y': .5}
                Widget:
                    size_hint_y: .27

<InputFocusedScreen@Screen>:
    name: 'input_focused'
    on_enter: self.ids['debug_panel_focused'].data = app.debug_data
    canvas.before:
        Rectangle:
            source: './icon/background/background_partial.png'
            size: Window.size
            pos: (0, 0)
    BoxLayout:
        id: body
        orientation: 'vertical'
        size_hint: 1, 1
        padding: [20, 20, 20, 20]
        DebugPanelFocused:
            id: debug_panel_focused
            size_hint_y: .38
        Widget:
            size_hint_y: .03
        BoxLayout:
            id: input_layout
            orientation: 'vertical'
            size_hint_y: .12
            Input:
                id: input_box
                size_hint_y: 1
                Content:
                    id: cmd_input_focused
                    size: (input_box.width-40, input_box.height)
                    pos_hint: {'center_x': .5}
                    pos: (input_box.pos[0]+20, input_box.pos[1]-(input_box.height/2)+20)
        Widget:
            id: bottom_half
            size_hint: 1, .45

<AppManager@ScreenManager>:
    MainScreen:
    InputFocusedScreen:

AppManager:





